<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Speedrunner.UI">

    <Style TargetType="{x:Type local:Return}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Return}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <TextBlock Text="Return"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Delay}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Delay}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <TextBlock Text="{Binding Timeout, RelativeSource={RelativeSource TemplatedParent}, StringFormat=Delay: \{0\} ms}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:InvokeMethod}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:InvokeMethod}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <TextBlock>
                            <Run Text="InvokeMethod: "/>
                            <Run Text="{Binding Type.Name, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Run Text="."/>
                            <Run Text="{TemplateBinding MethodName}"/>
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Expression}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Expression}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <TextBlock Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, StringFormat=Expression: \{0\}}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ForRange}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ForRange}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel>
                            <TextBlock>
                                <Run Text="ForRange: "/>
                                <Run Text="{TemplateBinding VariableName}"/>
                                <Run Text="="/>
                                <Run Text="{Binding Start, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Run Text=", Count:"/>
                                <Run Text="{Binding Count, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Run Text=", Step:"/>
                                <Run Text="{Binding Step, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </TextBlock>
                            <ItemsPresenter Margin="{TemplateBinding ItemsMargin}"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Click}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Click}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <TextBlock>
                            <Run Text="Click:"/>
                            <Run Text="{Binding Timeout, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Run Text="ms,"/>
                            <Run Text="{Binding Position, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:SequentialWorkflow}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SequentialWorkflow}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <DockPanel>
                            <TextBlock Text="{Binding Title, RelativeSource={RelativeSource TemplatedParent}}" Background="#FFCCDDFF" Padding="8,2" DockPanel.Dock="Top"/>
                            <ScrollViewer VerticalScrollBarVisibility="Auto" Margin="8,2">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:WorkflowVariables}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WorkflowVariables}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <DockPanel>
                            <TextBlock Text="Variables" Background="#FFFFDDCC" Padding="8,2" DockPanel.Dock="Top"/>
                            <ScrollViewer VerticalScrollBarVisibility="Auto" Margin="8,2">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:WorkflowResult}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WorkflowResult}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <DockPanel>
                            <TextBlock Text="Result" Background="#FFBBEECC" Padding="8,2" DockPanel.Dock="Top"/>
                            <ScrollViewer VerticalScrollBarVisibility="Auto" Margin="8,2">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:Variable}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Variable}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <TextBlock>
                            <Run Text="{Binding Type.Name, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Run Text="{TemplateBinding VariableName}"/>
                            <Run Text="="/>
                            <Run Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
